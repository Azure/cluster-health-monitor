# This workflow builds and publishes the cluster-health-monitor image to GitHub Container Registry (ghcr.io).

name: build_and_publish_ghcr

on:
  workflow_dispatch:
    inputs:
      releaseTag:
        description: 'Release tag to publish images, defaults to the latest one'
        type: string

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  CLUSTER_HEALTH_MONITOR_IMAGE_NAME: cluster-health-monitor
  CLUSTER_HEALTH_MONITOR_IMAGE_VERSION: main

jobs:
  export-registry:
    runs-on: ubuntu-22.04
    outputs:
      registry: ${{ steps.export.outputs.registry }}
    steps:
    - id: export
      run: |
        # registry must be in lowercase
        echo "registry=$(echo "${{ env.REGISTRY }}/${{ github.repository }}" | tr [:upper:] [:lower:])" >> $GITHUB_OUTPUT
  publish-images:
    needs: export-registry
    env:
      REGISTRY: ${{ needs.export-registry.outputs.registry }}
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
        fetch-depth: 0
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: image=mcr.microsoft.com/oss/v2/moby/buildkit:v0.18.1
    
    - name: Set image version for a new release
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        echo "CLUSTER_HEALTH_MONITOR_IMAGE_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
    
    - name: Login to ${{ env.REGISTRY }}
      uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build ${{ env.CLUSTER_HEALTH_MONITOR_IMAGE_NAME}}
      uses: docker/build-push-action@v6
      with:
        context: .
        file: docker/cluster-health-monitor.Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.CLUSTER_HEALTH_MONITOR_IMAGE_NAME}}:${{ env.CLUSTER_HEALTH_MONITOR_IMAGE_VERSION }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
