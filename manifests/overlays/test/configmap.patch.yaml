- op: test
  path: /metadata/name
  value: cluster-health-monitor-config
- op: replace
  path: /data/config.yaml
  value: |
    checkers:
      - name: "test-internal-coredns"
        type: "dns"
        interval: "5s"
        timeout: "3s"
        dnsConfig:
          domain: "kubernetes.default.svc.cluster.local"
          queryTimeout: "1s"
      - name: "test-external-coredns"
        type: "dns"
        interval: "5s"
        timeout: "3s"
        dnsConfig:
          domain: "mcr.microsoft.com"
          queryTimeout: "1s"
      - name: "test-internal-localdns"
        type: "dns"
        interval: "5s"
        timeout: "3s"
        dnsConfig:
          domain: "kubernetes.default.svc.cluster.local"
          checkLocalDNS: true
          queryTimeout: "1s"
      - name: "test-external-localdns"
        type: "dns"
        interval: "5s"
        timeout: "3s"
        dnsConfig:
          domain: "mcr.microsoft.com"
          checkLocalDNS: true
          queryTimeout: "1s"
      - name: "test-pod-startup"
        type: "podStartup"
        interval: "10s"
        timeout: "10s"
        podStartupConfig:
          syntheticPodNamespace: "kube-system"
          syntheticPodLabelKey: "kubernetes.azure.com/cluster-health-monitor-checker-synthetic"
          syntheticPodStartupTimeout: "5s"
          maxSyntheticPods: 10
          syntheticPodTCPTimeout: "5s"
          syntheticPodTolerations:
            - key: "node-role.kubernetes.io/master"
              effect: "NoSchedule"
            - key: "CriticalAddonsOnly"
              operator: "Exists"
          syntheticPodNodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: "kubernetes.azure.com/cluster"
                      operator: "Exists"
                    - key: "type"
                      operator: "NotIn"
                      values: ["virtual-kubelet"]
                    - key: "kubernetes.io/os"
                      operator: "In"
                      values: ["linux"]
                    - key: "kubernetes.azure.com/mode"
                      operator: "In"
                      values: ["system"]
      - name: "test-api-server"
        type: "apiServer"
        interval: "5s"
        timeout: "5s"
        apiServerConfig:
          namespace: "kube-system"
          labelKey: "kubernetes.azure.com/cluster-health-monitor-checker-apiserver"
          mutateTimeout: "1s"
          readTimeout: "1s"
          maxObjects: 10
      - name: "test-metrics-server"
        type: "metricsServer"
        interval: "5s"
        timeout: "5s"
